# Complete Kubernetes setup with SQL Server + API
apiVersion: v1
kind: Secret
metadata:
  name: recipeshare-secrets
type: Opaque
stringData:
  ConnectionStrings__DefaultConnection: "Server=sqlserver-service,1433;Database=RecipeShareDb;User Id=sa;Password=YourPassword123!;TrustServerCertificate=true;"
  SQL_USERNAME: "sa"
  SQL_PASSWORD: "YourPassword123!"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sqlserver
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sqlserver
  template:
    metadata:
      labels:
        app: sqlserver
    spec:
      containers:
      - name: sqlserver
        image: mcr.microsoft.com/mssql/server:2022-latest
        env:
        - name: ACCEPT_EULA
          value: "Y"
        - name: SA_PASSWORD
          value: "YourPassword123!"
        - name: MSSQL_PID
          value: "Express"
        ports:
        - containerPort: 1433
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"

---
apiVersion: v1
kind: Service
metadata:
  name: sqlserver-service
spec:
  selector:
    app: sqlserver
  ports:
  - port: 1433
    targetPort: 1433
  type: ClusterIP

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: recipeshare-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: recipeshare-api
  template:
    metadata:
      labels:
        app: recipeshare-api
    spec:
      containers:
      - name: recipeshare-api
        image: jaquesburger/recipeshare-api:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
        env:
        - name: ASPNETCORE_ENVIRONMENT
          value: "Development"
        - name: ASPNETCORE_URLS
          value: "http://+:8080"
        - name: ConnectionStrings__DefaultConnection
          valueFrom:
            secretKeyRef:
              name: recipeshare-secrets
              key: ConnectionStrings__DefaultConnection
        
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 30
        
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10

---
apiVersion: v1
kind: Service
metadata:
  name: recipeshare-api-service
spec:
  type: NodePort
  ports:
  - port: 80
    targetPort: 8080
    nodePort: 30080
  selector:
    app: recipeshare-api